<class>

    <keyword> class </keyword>
    <identifier> Square </identifier>
    <symbol> { </symbol>
    <classVarDec>

        <keyword> field </keyword>
        <keyword> int </keyword>
        <identifier> x </identifier>
        <symbol> , </symbol>
        <identifier> y </identifier>
        <symbol> ; </symbol>
    </classVarDec>

    <classVarDec>

        <keyword> field </keyword>
        <keyword> int </keyword>
        <identifier> size </identifier>
        <symbol> ; </symbol>
    </classVarDec>

  <subroutineDec>

        <keyword> constructor </keyword>
        <identifier> Square </identifier>
        <identifier> new </identifier>
        <symbol> ( </symbol>
        <parameterList>

            <keyword> int </keyword>
            <identifier> Ax </identifier>
            <symbol> , </symbol>
            <keyword> int </keyword>
            <identifier> Ay </identifier>
            <symbol> , </symbol>
            <keyword> int </keyword>
            <identifier> Asize </identifier>
        </parameterList>

        <symbol> ) </symbol>
    <subroutineBody>

    <symbol> { </symbol>
      <statements>

        <letStatement>

            <keyword> let </keyword>
            <identifier> x </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> Ax </identifier>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> y </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> Ay </identifier>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> size </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> Asize </identifier>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> draw </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <returnStatement>

            <keyword> return </keyword>
            <keyword> this </keyword>
            <symbol> ; </symbol>
        </returnStatement>

      </statements>

        <ifStatement>

            <identifier> dispose </identifier>
            <symbol> ( </symbol>
              <expression>

                 <symbol> ) </symbol>
                 <symbol> { </symbol>
                 <term>

                    <keyword> do </keyword>
                 </term>

                 <term>

                    <identifier> Memory </identifier>
                 </term>

                 <symbol> . </symbol>
                 <term>

                    <identifier> deAlloc </identifier>
                 </term>

                 <symbol> ( </symbol>
                 <term>

                    <keyword> this </keyword>
                 </term>

                 <symbol> ) </symbol>
              </expression>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
      <statements>

        <returnStatement>

            <keyword> return </keyword>
            <symbol> ; </symbol>
            <symbol> } </symbol>
        </returnStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> true </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <returnStatement>

            <keyword> return </keyword>
            <symbol> ; </symbol>
            <symbol> } </symbol>
        </returnStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> false </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <returnStatement>

            <keyword> return </keyword>
            <symbol> ; </symbol>
            <symbol> } </symbol>
        </returnStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> erase </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> size </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 2 </integerConstant>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> draw </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

      </statements>

            <keyword> return </keyword>
        </ifStatement>

    </subroutineBody>

  </subroutineDec>

  <subroutineDec>

        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> decSize </identifier>
        <symbol> ( </symbol>
        <parameterList>

        </parameterList>

        <symbol> ) </symbol>
    <subroutineBody>

    <symbol> { </symbol>
      <statements>

        <doStatement>

            <keyword> do </keyword>
            <identifier> erase </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> size </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 2 </integerConstant>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> draw </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

      </statements>

    </subroutineBody>

  </subroutineDec>

  <subroutineDec>

        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> moveUp </identifier>
        <symbol> ( </symbol>
        <parameterList>

        </parameterList>

        <symbol> ) </symbol>
    <subroutineBody>

    <symbol> { </symbol>
      <statements>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> false </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <symbol> ( </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

              <expression>

                 <symbol> ) </symbol>
                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> y </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 2 </integerConstant>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> true </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

      </statements>

    </subroutineBody>

  </subroutineDec>

  <subroutineDec>

        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> moveDown </identifier>
        <symbol> ( </symbol>
        <parameterList>

        </parameterList>

        <symbol> ) </symbol>
    <subroutineBody>

    <symbol> { </symbol>
      <statements>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> false </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> y </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 2 </integerConstant>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> true </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <symbol> ( </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

              <expression>

                 <symbol> ) </symbol>
                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

      </statements>

    </subroutineBody>

  </subroutineDec>

  <subroutineDec>

        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> moveLeft </identifier>
        <symbol> ( </symbol>
        <parameterList>

        </parameterList>

        <symbol> ) </symbol>
    <subroutineBody>

    <symbol> { </symbol>
      <statements>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> false </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <symbol> ( </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

              <expression>

                 <symbol> ) </symbol>
                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> x </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 2 </integerConstant>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> true </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

      </statements>

    </subroutineBody>

  </subroutineDec>

  <subroutineDec>

        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> moveRight </identifier>
        <symbol> ( </symbol>
        <parameterList>

        </parameterList>

        <symbol> ) </symbol>
    <subroutineBody>

    <symbol> { </symbol>
      <statements>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> false </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

        <letStatement>

            <keyword> let </keyword>
            <identifier> x </identifier>
            <symbol> = </symbol>
              <expression>

                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <integerConstant> 2 </integerConstant>
                 </term>

                 <symbol> ; </symbol>
              </expression>

        </letStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> setColor </identifier>
            <symbol> ( </symbol>
               <expressionList>

               </expressionList>

            <keyword> true </keyword>
            <symbol> ) </symbol>
        </doStatement>

        <doStatement>

            <keyword> do </keyword>
            <identifier> Screen </identifier>
            <symbol> . </symbol>
            <identifier> drawRectangle </identifier>
            <symbol> ( </symbol>
               <expressionList>

              <expression>

                 <symbol> ( </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

              <expression>

                 <symbol> ) </symbol>
                 <symbol> - </symbol>
                 <term>

                    <integerConstant> 1 </integerConstant>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> x </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> , </symbol>
              </expression>

              <expression>

                 <symbol> , </symbol>
                 <term>

                    <identifier> y </identifier>
                 </term>

                 <symbol> + </symbol>
                 <term>

                    <identifier> size </identifier>
                 </term>

                 <symbol> ) </symbol>
              </expression>

               </expressionList>

            <symbol> ) </symbol>
            <symbol> ; </symbol>
        </doStatement>

      </statements>

    </subroutineBody>

  </subroutineDec>

</class>

